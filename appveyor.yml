version: "{build}"

environment:
  matrix:
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.5"
      PYTHON: "C:\\Python35"
      JAVA_VERSION: "jdk9"
      JAVA: "C:\\Program Files (x86)\\Java\\jdk9"
      ANT: "1.10.5"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.5"
      PYTHON: "C:\\Python35-x64"
      JAVA_VERSION: "jdk9"
      JAVA: "C:\\Program Files\\Java\\jdk9"
      ANT: "1.10.5"
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36"
      JAVA_VERSION: "jdk7"
      JAVA: "C:\\Program Files (x86)\\Java\\jdk1.7.0"
      ANT: "1.9.13"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36-x64"
      JAVA_VERSION: "jdk7"
      JAVA: "C:\\Program Files\\Java\\jdk1.7.0"
      ANT: "1.9.13"
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36"
      JAVA_VERSION: "jdk8"
      JAVA: "C:\\Program Files (x86)\\Java\\jdk1.8.0"
      ANT: "1.10.5"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36-x64"
      JAVA_VERSION: "jdk8"
      JAVA: "C:\\Program Files\\Java\\jdk1.8.0"
      ANT: "1.10.5"
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36"
      JAVA_VERSION: "jdk9"
      JAVA: "C:\\Program Files (x86)\\Java\\jdk9"
      ANT: "1.10.5"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36-x64"
      JAVA_VERSION: "jdk9"
      JAVA: "C:\\Program Files\\Java\\jdk9"
      ANT: "1.10.5"
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.7"
      PYTHON: "C:\\Python37"
      JAVA_VERSION: "jdk9"
      JAVA: "C:\\Program Files (x86)\\Java\\jdk9"
      ANT: "1.10.5"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.7"
      PYTHON: "C:\\Python37-x64"
      JAVA_VERSION: "jdk9"
      JAVA: "C:\\Program Files\\Java\\jdk9"
      ANT: "1.10.5"

init:
  - set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - set JAVA_HOME=%JAVA%
  - set PATH=%JAVA%\\bin;%PATH%
  # Open Fortran Parser
  - git clone "https://github.com/OpenFortranProject/open-fortran-parser" "..\\open-fortran-parser"
  # Open Fortran Compiler
  #- git clone "https://github.com/codethinklabs/ofc" "../open-fortran-compiler"
  #- cd "..\\open-fortran-compiler" && make && cd -
  #- set PATH=%PATH%;%cd%\\..\\open-fortran-compiler
  # FFB-MINI app
  - git clone "https://github.com/mbdevpl/ffb-mini" "..\\ffb-mini" --branch ofp_tests
  # miranda_io app
  - git clone "https://github.com/mbdevpl/miranda_io" "..\\miranda_io"
  # ant
  - ps: Invoke-WebRequest "https://www.apache.org/dist/ant/binaries/apache-ant-$Env:ANT-bin.zip" -OutFile "..\\apache-ant-$Env:ANT-bin.zip"
  - ps: Expand-Archive -Path "..\\apache-ant-$Env:ANT-bin.zip" -DestinationPath "C:\\"
  - set PATH=C:\\apache-ant-%ANT%\\bin;%PATH%

install:
  - python -m pip install -U pip
  - python -m pip install -U -r dev_requirements.txt
  # Java
  - python -m open_fortran_parser --dev-deps
  - set CLASSPATH=%cd%\\lib\\*;%CLASSPATH%
  - ant -Dpython=python
  - set CLASSPATH=%cd%\\dist\\*;%CLASSPATH%
  # Java tests
  - ps: Invoke-WebRequest "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.agent-0.8.1-runtime.jar" -OutFile "lib\\org.jacoco.agent-0.8.1-runtime.jar"
  - ps: Invoke-WebRequest "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.cli-0.8.1-nodeps.jar" -OutFile "lib\\org.jacoco.cli-0.8.1-nodeps.jar"

build: off

test_script:
  - set TEST_PACKAGING=1
  - if [%JAVA_VERSION%]==[jdk7] set TEST_DEPENDENCIES=1
  - if [%JAVA_VERSION%]==[jdk7] set TEST_LONG=1
  - set TEST_COVERAGE=1
  - python -m coverage run --branch --source . -m unittest -v

after_test:
  - python -m coverage report --show-missing
  - java -jar "lib\\org.jacoco.cli-0.8.1-nodeps.jar" report "jacoco.exec" --classfiles "bin\\" --sourcefiles "src\\" --xml jacoco.xml
  - codecov
  # Bintray archive preparation
  - python -m pip install version_query
  - ps: Invoke-WebRequest "https://gist.githubusercontent.com/mbdevpl/46d458350f0c9cc7d793b67573e01f7b/raw/prepare_bintray_deployment.py" -OutFile "prepare_bintray_deployment.py"
  - python prepare_bintray_deployment.py "windows%ARCHITECTURE%-%JAVA_VERSION%-python%PYTHON_VERSION%" "dist\*.jar" "dist\*.tar.gz" "dist\*.whl" "dist\*.zip"
  - set /p BINTRAY_VERSION=<.bintray_version.txt

artifacts:
  - path: dist\*.jar
  - path: dist\*.tar.gz
  - path: dist\*.whl
  - path: dist\*.zip
  - path: '*-bintray.zip'

deploy:
  - provider: BinTray
    username: $(APPVEYOR_ACCOUNT_NAME)
    api_key:
      secure: cMLbWadS24XyCD5RU3XM+2GrgqtTfoBgKwkQXyDyVa/3QOF1rXheHki+BRXP5tLo
    subject: $(APPVEYOR_ACCOUNT_NAME)
    repo: pkgs
    package: $(APPVEYOR_PROJECT_NAME)
    version: $(BINTRAY_VERSION)
    publish: true
    override: true
    explode: true
    artifact: /.*-bintray\.zip/
