sudo: required
language: generic
addons:
  apt:
    packages:
      - ant
  homebrew:
    packages:
      - ant
      - pyenv
matrix:
  include:
    - os: linux
      language: python
      python: "3.5"
      env: TRAVIS_JDK_VERSION=oraclejdk9
    - os: linux
      language: python
      python: "3.6"
      env: TRAVIS_JDK_VERSION=openjdk7
    - os: linux
      language: python
      python: "3.6"
      env: TRAVIS_JDK_VERSION=openjdk8
    - os: linux
      language: python
      python: "3.6"
      env: TRAVIS_JDK_VERSION=oraclejdk9
    - os: linux
      dist: xenial
      sudo: true
      language: python
      python: "3.7"
      env: TRAVIS_JDK_VERSION=openjdk11
    - os: osx
      language: generic
      env:
        - TRAVIS_PYTHON_VERSION="3.5"
        - TRAVIS_JDK_VERSION=oraclejdk8
    - os: osx
      language: generic
      env:
        - TRAVIS_PYTHON_VERSION="3.6"
        - TRAVIS_JDK_VERSION=oraclejdk8
    - os: osx
      language: generic
      env:
        - TRAVIS_PYTHON_VERSION="3.7"
        - TRAVIS_JDK_VERSION=oraclejdk8
  allow_failures:
    - python: "3.7"

before_install:
  - |
    set -e
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      if ! [[ ${TRAVIS_PYTHON_VERSION} =~ .*-dev$ ]] ; then
        TRAVIS_PYTHON_VERSION="$(pyenv install --list | grep -E " ${TRAVIS_PYTHON_VERSION}(\.[0-9brc]+)+$" | tail -n 1 | sed -e 's/^[[:space:]]*//')"
      fi
      pyenv install "${TRAVIS_PYTHON_VERSION}"
      export PATH="${HOME}/.pyenv/versions/${TRAVIS_PYTHON_VERSION}/bin:${PATH}"
    fi
    set +e
  - |
    set -e
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "$(lsb_release -cs)" == "trusty" ]]; then
      jdk_switcher use $TRAVIS_JDK_VERSION
    fi
    set +e
  - java -version
  - python --version
  # Open Fortran Parser
  - git clone "https://github.com/OpenFortranProject/open-fortran-parser" "../open-fortran-parser"
  # Open Fortran Compiler
  - git clone "https://github.com/codethinklabs/ofc" "../open-fortran-compiler"
  - cd "../open-fortran-compiler" && make && cd -
  - export PATH="${PATH}:$(pwd)/../open-fortran-compiler"
  # FFB-MINI app
  - git clone "https://github.com/mbdevpl/ffb-mini" "../ffb-mini"
  # FLASH 5 app
  - git clone "https://github.com/ECP-Astro/FLASH5.git" "../flash5"
  # miranda_io app
  - git clone "https://github.com/mbdevpl/miranda_io" "../miranda_io"

install:
  # dependencies
  - pip install -U pip
  - pip install -U -r dev_requirements.txt
  # Java
  - python -m open_fortran_parser --dev-deps
  - export CLASSPATH="${CLASSPATH}:$(pwd)/lib/*"
  - ant -Dpython=python
  - export CLASSPATH="${CLASSPATH}:$(pwd)/dist/*"
  # Java tests
  - wget "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.agent-0.8.1-runtime.jar" -O "lib/org.jacoco.agent-0.8.1-runtime.jar"
  - wget "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.cli-0.8.1-nodeps.jar" -O "lib/org.jacoco.cli-0.8.1-nodeps.jar"

script:
  - |
    if [[ "${TRAVIS_JDK_VERSION}" == "openjdk7" ]]; then
      export TEST_DEPENDENCIES=1
      export TEST_LONG=1
    fi
  - TEST_PACKAGING=1 TEST_COVERAGE=1 python -m coverage run --branch --source . -m unittest -v

after_success:
  - python -m coverage report --show-missing
  - java -jar "lib/org.jacoco.cli-0.8.1-nodeps.jar" report "jacoco.exec" --classfiles "bin/" --sourcefiles "src/" --xml jacoco.xml
  - codecov

before_deploy:
  - pip3 install -U --user version_query || pip3 install -U version_query
  - wget https://gist.githubusercontent.com/mbdevpl/46d458350f0c9cc7d793b67573e01f7b/raw/prepare_bintray_deployment.py
  - python3 prepare_bintray_deployment.py "$TRAVIS_OS_NAME-$TRAVIS_JDK_VERSION-python$TRAVIS_PYTHON_VERSION" "dist/*.jar" "dist/*.tar.gz" "dist/*.whl" "dist/*.zip"

deploy:
  - provider: bintray
    file: ".bintray.json"
    user: "mbdevpl"
    key:
      secure: "QXtjizZcEByE66zwhrhGHG+6Y9YZKXnPQxYdQYH0CFQ3zc6gakRnzsMGAAo0APhtn+EZAZjzjBXcO/WllhhPlfIInad24Q7N17MzIIoUO9exjcmahZAygXgazLaN4+hpntv/2AuQd7ZAfNXpmMtKfRSGyzKqWMwwVTvEerKigbSFZmEjyBsX4jzUxD7Mpza8XULwGf70xpfTg2T5Ovy4iwDzIhFwruWS7RjwORFWd4gyqLJrfN/LuAEmwt0BYu0qyfx7onqHUbUYWYj0gsnkHMZBftf/mJXTYmdZIBkiu/oeaYdc4DN3hEnKdJ77AMt6ny8FgP/vs4gacRX7NLBcbQlkpEueQQzAGK/E8AL2M0Os/UX7DH9tuDjON2DwE2BGt87DVxc+AxwCIpntxTfuWaJuenylVhDNJ1UsQHvODPALyVjT5CT05sVG83pLTCO9w85Hl4D2engxPkb+ksGsa51vEH9Ohm70sO+XyawQqWtoOJ8UTqKvKvyP8yDsUv+GXhlqmy8/H9CxO14fmz5/kpd5pWC4ZGJZnIEjsIosl/WeFRQJ5fOmYen48A06+cWSAmEbfe/1w8c0Y2Z+wGtbTjUM4z988TYlKJK2pYxe+xoQH+615HLETPR65Ngv6FqRM7wrUbKPvznc875kaAugsnbjBgMUZwX/gMxAkxLp0T0="
    on:
      all_branches: true
    skip_cleanup: true

notifications:
  slack:
    secure: "OiXc/9CvAVd1l3xWTP554GzPe7ba6cBUHzLLHi4siEW0TDCDeJAzRrFbA/Ei2OTBqVX5p6b4uqeuPCc+IIYhcNDZa4tvEAAyfMIttKEEiEE7qMESxaqXkYQo0IIDu2FVjNjvqZlOfzc9kjFL2J2W3uCd/yivd/WOIoIijkU1HiFfN7wk6e+1ATUIyPXrNJNDYpE2/gKJhMVNHexjEQkeNgGN4eoAU/2cTdwI23SkHCsPgxbgCSMCUn0N/ZsTEgu/zzVFUBlqzzDZKR+fHmrCv7pLHSkIe2WROlbAFyg0AzIEJwhTLbZLOC9Xh1FLhigYvNDaZsOFUnlSEwmSjegvtnXLQkJ2vtSS7xf2UaLdc4w+kgv6If7369IICHgi59X97C8dT9W+YeZoidkINiMuijmCkTKqKF+DhpOx6x2bt6Pk91RscIjwqamb1a0SvMhgqtfpYQz/UkyDadC3g2BsHdg0l+K6ZmEWtfJUMAVctsr8dvwg2KlwrfX5V4+ecwzluz5aL7jYBzXRlgO83ulvM+xaS/9+CGMn08w6ipCjK2xrD4ZKMnoHBr2s+ijceoYINg9nDefNknV9C2Ja/pjgMCtWKZNlX/PkhbOq0oLBBsoUM3Mp1JgP86I88H6TSCRFk8ASV/ghZeaAr8k7AzZi2TAzGFh90KGrlw6aNzvqVak="
  email: false
